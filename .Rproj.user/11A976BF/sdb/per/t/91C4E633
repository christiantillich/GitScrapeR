{
    "contents" : "library('curl')\n# library('jsonlite')\n# library('httpuv')\nlibrary('httr')\nlibrary('dplyr')\n\n\n#' show.github.path\n#' @description Function returns the content of a github path\n#' @param path - Not the full path. Just the parts after api.github.com/, e.g.\n#' 'user/christiantillich/repos', as a character string.\n#' @param two.fac - Added for two-factor authentication. I'm using a PAT, though\n#' so I've never actually tested whether this works.\n#' @param user - defaults to the global variable GITHUB_USER. Please add this\n#' to your global variables in your .RProfile\n#' @param pwd - defaults to the global variable GITHUB_TOKEN. Please create a\n#' valid token via https://github.com/settings/tokens and add this to your\n#' .RProfile. Alternatively, you can just use your password. However, because\n#' we're locked into 2-factor authentication here, I haven't tested this.\n#' @returns This function returns a list object containing everything in the\n#' API call. Internally, this is just content(GET(path)), with the domain and\n#' authentication credentials all filled out.\nshow.github.path <- function(\n  path,\n  two.fac=0,\n  user = getOption(\"GITHUB_USER\"),\n  pwd = getOption(\"GITHUB_TOKEN\")\n){\n  thing <- GET(\n     paste(\"https://api.github.com/\",path,sep=\"\")\n    ,authenticate(user,pwd)\n    ,add_headers(\"X-GitHub-OTP\" = two.fac)\n  )\n  content(thing)\n}\n\n#Try various paths to make sure it's working.\n# show.github.path(\"user\")\n# show.github.path(\"issues\")\n# show.github.path('repos/avantcredit/analytics-partners/issues')\n\n",
    "created" : 1449783761901.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1858040001",
    "id" : "91C4E633",
    "lastKnownWriteTime" : 1449783897,
    "path" : "~/GitScrapeR/R/show.github.path.R",
    "project_path" : "R/show.github.path.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}